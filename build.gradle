plugins {
    id "nebula.os-package" version "2.2.6"
    id "scala"
    id "application"
    id 'net.researchgate.release' version '2.0.2'
}

mainClassName = 'com.scopely.affqis.Main'

repositories {
    mavenCentral()

    // CDH
    maven { url 'https://repository.cloudera.com/artifactory/cloudera-repos/' }

    // Jawampa
    maven { url 'https://raw.githubusercontent.com/Matthias247/jawampa/mvn-repo/' }

    // Spray (JSON)
    maven { url 'http://repo.spray.io/' }

    // Typesafe Stuff
    maven { url 'http://dl.bintray.com/typesafe/maven-releases/' }
}

configurations {
    compile.exclude group: 'com.sun.jdmk'
    compile.exclude group: 'com.sun.jmx'
    compile.exclude group: 'javax.jms'
    compile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    compile 'org.scala-lang:scala-library:2.11.6'
    compile 'org.apache.hive:hive-jdbc:0.13.1-cdh5.3.2'
    compile 'org.apache.hadoop:hadoop-common:2.5.0-cdh5.3.2'
    compile 'org.scala-lang.modules:scala-parser-combinators_2.11:1.0.3'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'ws.wamp.jawampa:jawampa:0.2.0'
    compile 'io.reactivex:rxscala_2.11:0.24.1'
    compile 'io.spray:spray-json_2.11:1.3.1'
    testCompile 'org.specs2:specs2-core_2.11:3.6'
}

ospackage {
    os = LINUX
    into '/opt/affqis'
    from 'build/install/affqis'
    link('/usr/local/bin/affqis', '/opt/affqis/bin/affqis')
}

def rpmVersion = version.endsWith('-SNAPSHOT') ? version.split('-')[0] : version

buildRpm {
    version = rpmVersion
}

task buildDists
buildDists.dependsOn(installDist, buildDeb, buildRpm)
buildDeb.mustRunAfter(installDist)
buildRpm.mustRunAfter(installDist)

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
